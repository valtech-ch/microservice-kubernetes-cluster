plugins {
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
    id "org.flywaydb.flyway" version "10.10.0"
    id 'java'
    id 'eclipse'
    id 'idea'
}

project.description = 'persistence'

ext {
    imageName = 'persistence'
    minimumCoveragePerFile = 0.6
    filesExcludedFromCoverage = ["*PersistenceApplication.java",
                                 "*PersistenceControllerGrpc.java",
                                 "*GrpcExceptionTranslator.java"]
}

apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"
apply from: "${rootProject.projectDir}/gradle/codeStyle.gradle"
apply from: "${rootProject.projectDir}/gradle/swaggerDocs.gradle"
apply from: "${rootProject.projectDir}/gradle/dockerBuild.gradle"
apply from: "${rootProject.projectDir}/gradle/test.gradle"

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

gitProperties {
    keys = [
        'git.branch',
        'git.commit.id',
        'git.commit.time',
        'git.commit.id.full'
    ]
}

springBoot {
    buildInfo{
        properties {
            time = null
        }
    }
}

dependencies {
    implementation project(':persistence-api')
    implementation project(':security')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'io.vavr:vavr:0.10.4'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.flywaydb:flyway-core:10.10.0'
    implementation 'org.flywaydb:flyway-mysql:10.10.0'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.12.4'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation "org.springframework.kafka:spring-kafka:$springKafkaVersion"
    implementation 'net.devh:grpc-spring-boot-starter:3.0.0.RELEASE'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    runtimeOnly 'org.mariadb:r2dbc-mariadb:1.2.0'
    runtimeOnly 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.3.3'
    runtimeOnly 'com.h2database:h2:2.2.224'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'net.devh:grpc-client-spring-boot-starter:3.0.0.RELEASE'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:mariadb:1.19.7'
    testImplementation 'io.springfox:springfox-staticdocs:2.6.1'
    testImplementation "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"
    testImplementation 'io.dropwizard.metrics:metrics-core:4.2.25'
    testImplementation 'io.jsonwebtoken:jjwt:0.12.5'
    testImplementation 'io.projectreactor:reactor-test:3.6.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}
