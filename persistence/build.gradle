plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.google.cloud.tools.jib' version '2.8.0'
    id "org.flywaydb.flyway" version "7.7.0"
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'idea'
}

ext {
    minimumCoveragePerFile = 0.2 // TODO improve coverage
    filesExcludedFromCoverage = ["*Configuration.java", "*Application.java", "*Exception.java"]
}

apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"
apply from: "${rootProject.projectDir}/gradle/codeStyle.gradle"
apply plugin: "com.gorylenko.gradle-git-properties"

project.description = 'Persistence'

sourceCompatibility = 11
targetCompatibility = 11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
}

gitProperties {
    keys = ['git.branch','git.commit.id','git.commit.time','git.commit.id.full']
}

springBoot {
    buildInfo()
}

jib {
    from {
        image = 'adoptopenjdk/openjdk11:alpine-jre'
    }
    to {
        image = "${docker_registry}/microservice-kubernetes-cluster/persistence"
        auth {
            username = "${docker_registry_username}"
            password = "${docker_registry_password}"
        }
        tags = ["${gitHash}", 'latest']
    }
}
ext {
    set('springCloudVersion', "2020.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security.oauth:spring-security-oauth2'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'org.flywaydb:flyway-core'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2:1.4.200'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation "org.testcontainers:mariadb:1.15.2"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
test {
    useJUnitPlatform()
}
