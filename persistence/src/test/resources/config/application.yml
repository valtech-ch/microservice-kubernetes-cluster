spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
  r2dbc:
    url: ${R2DBC_URL}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
  flyway:
    enabled: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    locations: classpath:db/migration/mariadb
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      group-id: persistenceApp
      properties:
        spring.json.trusted.packages: ch.valtech.kubernetes.microservice.cluster.persistence.api.dto
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
springfox:
  documentation:
    enabled: false
grpc:
  port: 9090
management:
  security:
    username: actuator
    password: actuator
application:
  hostname: http://localhost:8081
  token.url: http://localhost:8090/oauth/token
  kafka:
    topic: auditing
    stream:
      topic: reverseAuditing
  cors:
    allowed.origins: "*"
    allowed.methods: "*"
